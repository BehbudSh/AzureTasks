{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "availabilitysetName": {
      "type": "string",
      "minLength": 1
    },
    "vmstorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "MasterVMName": {
      "type": "string",
      "minLength": 1
    },
    "MasterVMAdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "MasterVMAdminPassword": {
      "type": "securestring"
    },
    "MasterVMWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview",
        "2016-Datacenter"
      ]
    },
    "SlaveVMName": {
      "type": "string",
      "minLength": 1
    },
    "SlaveVMAdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "SlaveVMAdminPassword": {
      "type": "securestring"
    },
    "SlaveVMWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview",
        "2016-Datacenter"
      ]
    },
    "dnsNameForNLB": {
      "type": "string",
      "metadata": {
        "description": "DnsNameForPublicNLB"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "variables": {
    "vmstorageName": "[concat('vmstorage', uniqueString(resourceGroup().id))]",
    "VMVnetPrefix": "10.0.0.0/16",
    "VMVnetSubnet1Name": "Subnet-1",
    "VMVnetSubnet1Prefix": "10.0.0.0/24",
    "VMVnetSubnet2Name": "Subnet-2",
    "VMVnetSubnet2Prefix": "10.0.1.0/24",
    "MasterVMImagePublisher": "MicrosoftWindowsServer",
    "MasterVMImageOffer": "WindowsServer",
    "MasterVMVmSize": "Standard_DS1_v2",
    "MasterVMVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'VMVnet')]",
    "MasterVMSubnetRef": "[concat(variables('MasterVMVnetID'), '/subnets/', variables('VMVnetSubnet1Name'))]",
    "MasterVMNicName": "[concat(parameters('MasterVMName'), 'NetworkInterface')]",
    "SlaveVMImagePublisher": "MicrosoftWindowsServer",
    "SlaveVMImageOffer": "WindowsServer",
    "SlaveVMVmSize": "Standard_DS1_v2",
    "SlaveVMVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'VMVnet')]",
    "SlaveVMSubnetRef": "[concat(variables('SlaveVMVnetID'), '/subnets/', variables('VMVnetSubnet2Name'))]",
    "SlaveVMNicName": "[concat(parameters('SlaveVMName'), 'NetworkInterface')]",
    "networkSecurityGroupName": "MyNsg",
    "loadBalancerName": "plb1",
    "masterDSCArchiveFolder": "DSC",
    "masterDSCArchiveFileName": "masterDSC.zip",
    "MasterCustomScriptScriptFolder": "CustomScripts",
    "MasterCustomScriptScriptFileName": "MasterCustomScript.ps1",
    "SlaveDSC2ArchiveFolder": "DSC",
    "SlaveDSC2ArchiveFileName": "slaveDSC.zip",
    "SlaveCustomScriptScriptFolder": "CustomScripts",
    "SlaveCustomScriptScriptFileName": "SlaveCustomScript.ps1",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "publicIpAddressName": "PublicIp",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
  },
  "resources": [
    {
      "name": "[parameters('availabilitysetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "availabilityset"
      },
      "properties": {
        "platformUpdateDomainCount": 2,
        "platformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "apiVersion": "2018-12-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "nlbFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "nlbBackEnd"
          }
        ],
        "probes": [
          {
            "name": "lbprobe",
            "properties": {
              "protocol": "Tcp",
              "port": 8983,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "lbrule",
            "properties": {
              "protocol": "Tcp",
              "frontendPort": 8983,
              "backendPort": 8983,
              "idleTimeoutInMinutes": 5,
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/nlbFrontEnd')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/nlbBackEnd')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              }
            }
          }
        ],
        "inboundNatRules": [
          {
            "name": "masterRDP",
            "properties": {
              "frontendPort": 3390,
              "backendPort": 3389,
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/nlbFrontEnd')]"
              },
              "protocol": "Tcp",
              "enableFloatingIP": false,
              "provisioningState": "Succeeded"
            }
          },
          {
            "name": "slaveRDP",
            "properties": {
              "frontendPort": 3391,
              "backendPort": 3389,
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/nlbFrontEnd')]"
              },
              "protocol": "Tcp",
              "enableFloatingIP": false,
              "provisioningState": "Succeeded"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIpAddressName')]",
      "apiVersion": "2018-12-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForNLB')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-12-01",
      "name": "[variables('networkSecurityGroupNAme')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "properties": {
        "securityRules": [
          {
            "name": "Allow8983",
            "properties": {
              "description": "Allow TCP port",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "8983",
              "access": "Allow",
              "direction": "Inbound",
              "protocol": "Tcp",
              "priority": 100
            }
          },
          {
            "name": "RDP",
            "properties": {
              "description": "Allow RDP port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "direction": "Inbound",
              "priority": 500
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vmstorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-02-01",
      "sku": {
        "name": "[parameters('vmstorageType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "vmstorage"
      },
      "kind": "Storage"
    },
    {
      "name": "VMVnet",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
      ],
      "tags": {
        "displayName": "VMVnet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('VMVnetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('VMVnetSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('VMVnetSubnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups' ,variables('networkSecurityGroupName'))]"
              }
            }
          },
          {
            "name": "[variables('VMVnetSubnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('VMVnetSubnet2Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups' ,variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('MasterVMNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VMVnet')]"
      ],
      "tags": {
        "displayName": "MasterVMNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('MasterVMSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/nlbBackEnd')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')),'/inboundNatRules/masterRDP')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('MasterVMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('MasterVMNicName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitysetName'))]"
      ],
      "tags": {
        "displayName": "MasterVM"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitysetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('MasterVMVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('MasterVMName')]",
          "adminUsername": "[parameters('MasterVMAdminUsername')]",
          "adminPassword": "[parameters('MasterVMAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('MasterVMImagePublisher')]",
            "offer": "[variables('MasterVMImageOffer')]",
            "sku": "[parameters('MasterVMWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "MasterVMOSDisk",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "masterVMDataDisk",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              },
              "diskSizeGB": 200,
              "createOption": "Empty",
              "caching": "ReadWrite",
              "lun": 0
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', variables('vmstorageName'), '.blob.core.windows.net/')]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('MasterVMNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2018-06-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('MasterVMName'))]"
          ],
          "tags": {
            "displayName": "masterDSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(parameters('_artifactsLocation'), '/', variables('masterDSCArchiveFolder'), '/', variables('masterDSCArchiveFileName'))]",
                "script": "masterDSC.ps1",
                "function": "Main"
              },
              "configurationArguments": {
                "nodeName": "[parameters('MasterVMName')]",
                "SolrCmd": "[concat(parameters('_artifactsLocation'), '/', 'SolrCmd', '/', 'MasterSolrCmd.ps1', parameters('_artifactsLocationSasToken') )]"
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
            }
          }
        },
        {
          "name": "MasterCustomScript",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2018-06-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('MasterVMName'))]"
          ],
          "tags": {
            "displayName": "MasterCustomScript"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), '/', variables('MasterCustomScriptScriptFolder'), '/', variables('MasterCustomScriptScriptFileName'), parameters('_artifactsLocationSasToken'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('MasterCustomScriptScriptFolder'), '/', variables('MasterCustomScriptScriptFileName'))]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('SlaveVMNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VMVnet')]"
      ],
      "tags": {
        "displayName": "SlaveVMNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('SlaveVMSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/nlbBackEnd')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')),'/inboundNatRules/slaveRDP')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('SlaveVMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('SlaveVMNicName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitysetName'))]"
      ],
      "tags": {
        "displayName": "SlaveVM"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('SlaveVMVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('SlaveVMName')]",
          "adminUsername": "[parameters('SlaveVMAdminUsername')]",
          "adminPassword": "[parameters('SlaveVMAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('SlaveVMImagePublisher')]",
            "offer": "[variables('SlaveVMImageOffer')]",
            "sku": "[parameters('SlaveVMWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "SlaveVMOSDisk",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "slaveVMDataDisk",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              },
              "diskSizeGB": 200,
              "caching": "ReadWrite",
              "createOption": "Empty",
              "lun": 0
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', variables('vmstorageName'), '.blob.core.windows.net/')]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('SlaveVMNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2018-06-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('SlaveVMName'))]"
          ],
          "tags": {
            "displayName": "SlaveDSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(parameters('_artifactsLocation'), '/', variables('SlaveDSC2ArchiveFolder'), '/', variables('SlaveDSC2ArchiveFileName'))]",
                "script": "SlaveDSC.ps1",
                "function": "Main"
              },
              "configurationArguments": {
                "nodeName": "[parameters('SlaveVMName')]",
                "SolrCmd": "[concat(parameters('_artifactsLocation'), '/', 'SolrCmd', '/', 'SlaveSolrCmd.ps1', parameters('_artifactsLocationSasToken') )]"
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
            }
          }
        },
        {
          "name": "SlaveCustomScript",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2018-06-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('SlaveVMName'))]"
          ],
          "tags": {
            "displayName": "SlaveCustomScript"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), '/', variables('SlaveCustomScriptScriptFolder'), '/', variables('SlaveCustomScriptScriptFileName'), parameters('_artifactsLocationSasToken'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('SlaveCustomScriptScriptFolder'), '/', variables('SlaveCustomScriptScriptFileName'))]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {}
}