{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmstorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "VMName": {
      "type": "string",
      "minLength": 1
    },
    "VMAdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "VMAdminPassword": {
      "type": "securestring"
    },
    "VMWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview",
        "2016-Datacenter"
      ]
    },
    "vmpipDnsName": {
      "type": "string",
      "minLength": 1
    },
    "certThumbprint": {
      "type": "string"
    },
    "certUserName": {
      "type": "string"
    },
    "certPassword": {
      "type": "securestring"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "variables": {
    "vmstorageName": "[concat('vmstorage', uniqueString(resourceGroup().id))]",
    "vmnetworkPrefix": "10.0.0.0/16",
    "vmnetworkSubnet1Name": "Subnet-1",
    "vmnetworkSubnet1Prefix": "10.0.0.0/24",
    "vmnetworkSubnet2Name": "Subnet-2",
    "vmnetworkSubnet2Prefix": "10.0.1.0/24",
    "VMImagePublisher": "MicrosoftWindowsServer",
    "VMImageOffer": "WindowsServer",
    "VMOSDiskName": "VMOSDisk",
    "VMVmSize": "Standard_D2_v2",
    "VMVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'vmnetwork')]",
    "VMSubnetRef": "[concat(variables('VMVnetID'), '/subnets/', variables('vmnetworkSubnet1Name'))]",
    "VMStorageAccountContainerName": "vhds",
    "VMNicName": "[concat(parameters('VMName'), 'NetworkInterface')]",
    "vmpipName": "vmpip",
    "vmdscArchiveFolder": "DSC",
    "networkSecurityGroupNAme": "vmnsg",
    "vmdscArchiveFileName": "vmdsc.zip"
  },
  "resources": [
    {
      "name": "[variables('vmstorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('vmstorageType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "vmstorage"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-12-01",
      "name": "[variables('networkSecurityGroupNAme')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "properties": {
        "securityRules": [
          {
            "name": "AllowTCPports80443",
            "properties": {
              "description": "Allow TCP ports",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationPortRanges": [
                "80",
                "443"
              ],
              "access": "Allow",
              "direction": "Inbound",
              "protocol": "Tcp",
              "priority": 100
            }
          },
          {
            "name": "RDP",
            "properties": {
              "description": "Allow RDP port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "direction": "Inbound",
              "priority": 500
            }
          }
        ]
      }
    },
    {
      "name": "vmnetwork",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "vmnetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vmnetworkPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vmnetworkSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('vmnetworkSubnet1Prefix')]"
            }
          },
          {
            "name": "[variables('vmnetworkSubnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('vmnetworkSubnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('VMNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'vmnetwork')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmpipName'))]"
      ],
      "tags": {
        "displayName": "VMNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('VMSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmpipName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('VMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('VMNicName'))]"
      ],
      "tags": {
        "displayName": "VM"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('VMVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VMName')]",
          "adminUsername": "[parameters('VMAdminUsername')]",
          "adminPassword": "[parameters('VMAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('VMImagePublisher')]",
            "offer": "[variables('VMImageOffer')]",
            "sku": "[parameters('VMWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "VMOSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName')), '2016-01-01').primaryEndpoints.blob, variables('VMStorageAccountContainerName'), '/', variables('VMOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('VMNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('VMName'))]"
          ],
          "tags": {
            "displayName": "vmdsc"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(parameters('_artifactsLocation'), '/', variables('vmdscArchiveFolder'), '/', variables('vmdscArchiveFileName'))]",
                "script": "vmdsc.ps1",
                "function": "Main"
              },
              "configurationArguments": {
                "nodeName": "[parameters('VMName')]",
                "Certificate": "[concat(parameters('_artifactsLocation'), '/', 'Certificate', '/', 'DscPrivateKey.pfx', parameters('_artifactsLocationSasToken') )]",
                "CertificatePK": "[concat(parameters('_artifactsLocation'), '/', 'Certificate', '/', 'DscPublicKey.cer', parameters('_artifactsLocationSasToken') )]",
                "Thumbprint": "[parameters('certThumbprint')]"
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationArguments": {
                "Credintial": {
                  "userName": "[parameters('certUserName')]",
                  "password": "[parameters('certPassword')]"
                }
              }
            }
          }
        }
      ]
    },
    {
      "name": "[variables('vmpipName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "vmpip"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('vmpipDnsName')]"
        }
      }
    }
  ],
  "outputs": {}
}